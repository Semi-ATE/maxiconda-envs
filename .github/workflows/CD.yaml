name: CD

on:
  release:
    types: [created]

jobs:
  build:
    name: ${{ matrix.SUBDIR }}
    runs-on: ubuntu-latest
    env:
      SUBDIR: ${{ matrix.SUBDIR }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - SUBDIR: win-64
          - SUBDIR: linux-64
          - SUBDIR: linux-aarch64
          - SUBDIR: osx-64
          - SUBDIR: osx-arm64
    steps:  
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install mamba & environment
      uses: mamba-org/provision-with-micromamba@v10

    - name: build meta-packages
      shell: bash -l {0}
      env:
        CONDA_UPLOAD_TOKEN: ${{ secrets.CONDA_UPLOAD_TOKEN }}
      run: |
        export MAXICONDA_ENV_RELEASE=${GITHUB_REF##*/}
        mkdir build
        cd build
        python -u ../scripts/maxiconda.py --build $SUBDIR

    - name: Upload meta-packages to artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.SUBDIR }}_packages
        path: build/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install mamba & environment
      uses: mamba-org/provision-with-micromamba@v10

    - name: Download meta-packages from artifacts
      uses: actions/download-artifact@v2

    - name: look around
      run: tree

    - name: Move packages into place
      shell: bash -l {0}
      run: |
        mkdir ./build
        for dir in ./*/; do
          dir="${dir%/}"
          dir="${dir##*/}"
          if [[ "$dir" == *_packages ]]; then
            subdir=${dir%_packages}
            source_dir="./${subdir}_packages/${subdir}"
            destination_dir="./build/${subdir}"
            mkdir $destination_dir
            copy="cp -rv $source_dir $destination_dir"
            echo $copy
            $copy
            remove="rm -rf $dir"
            echo $remove
            $remove
          fi
        done

    - name: look around
      run: tree

    - name: Upload to anaconda.org
      shell: bash -l {0}
      run: |
        export MAXICONDA_ENV_RELEASE=${GITHUB_REF##*/}
        python -u scripts/release.py

    - name: Create the summary
      shell: bash -l {0}
      run: |
        echo export MAXICONDA_ENV_RELEASE=${GITHUB_REF##*/}
        python -u scripts/digest.py --build ${GITHUB_REF##*/}

    - name: Upload the summary and the specs to release assets
      uses: alexellis/upload-assets@0.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        asset_paths: '["maxiconda-envs.xlsx", "specs.yaml"]'

