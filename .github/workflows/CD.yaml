name: Releases

on:
  release:
    types: [created]

jobs:
  build_and_upload:
    name: ${{ matrix.OS }}
    runs-on: ${{ matrix.VM }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - OS: win-64
            VM: windows-latest            
          - OS: linux-64
            VM: ubuntu-latest
          - OS: osx-64
            VM: macos-latest
          - OS: linux-aarch64
            VM: ubuntu-latest
            DOCKER_IMG: condaforge/linux-anvil-aarch64
          - OS: osx-arm64
            VM: macos-latest
            DOCKER_IMG: xyz      
    steps:  
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: latest
        activate-environment: maxiconda-envs
        environment-file: environment.yaml
        channel-priority: strict

    - name: Build and upload
      shell: bash -l {0}
      env:
        OS: ${{ matrix.OS }}
        DOCKER_IMG: ${{ matrix.DOCKER_IMG }}
        CONDA_UPLOAD_TOKEN: ${{ secrets.CONDA_UPLOAD_TOKEN }}
      run: |
        export MAXICONDA_ENV_RELEASE=${GITHUB_REF##*/};
        if [[ "$OS" == "linux-aarch64" ]]; then
          echo "Build and Upload Environments for linux-aarch64"
          #docker run --rm --privileged multiarch/qemu-user-static --reset --credential yes --persistent yes
          #docker run --rm -v "$(pwd):/construct" ${DOCKER_IMG} /scripts/build.sh
        elif [[ "$OS" == "osx-arm64" ]]; then
          echo "Build and Upload Environments for osx-arm64"
        else
          echo "Build and Upload Environments for $OS"
          python -u scripts/maxiconda.py --build --upload
        fi

  consolidate:
    runs-on: ubuntu-latest
    needs: build_and_upload
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: latest
        activate-environment: maxiconda-envs
        environment-file: environment.yaml
        channel-priority: strict

    - name: Create the summary
      shell: bash -l {0}
      run: |
        export MAXICONDA_ENV_RELEASE=${GITHUB_REF##*/}
        python -u scripts/maxiconda.py --digest

    - name: Upload the summary to release assets
      uses: alexellis/upload-assets@0.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        asset_paths: '["maxiconda-envs.xlsx"]'
